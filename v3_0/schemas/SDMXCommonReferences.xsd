<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright SDMX 2021 - http://www.sdmx.org -->
<xs:schema targetNamespace="http://www.sdmx.org/resources/sdmxml/schemas/v3_0/common" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.sdmx.org/resources/sdmxml/schemas/v3_0/common" version="2.1_20130301">

	
	<xs:annotation>
		<xs:appinfo>SDMX Common References Module</xs:appinfo>
		<xs:documentation>The common references module contains common constructs that are used to reference objects.</xs:documentation>
	</xs:annotation>

	<!-- Identification and Reference Field Types -->
	
	<xs:element name="UrnTest" type="UrnTestType"/>
	
	<xs:complexType name="UrnTestType">
		<xs:sequence>
			<xs:element name="Urn" type="UrnPrefixPart" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="UrnPrefixPart">
		<xs:annotation>
			<xs:documentation>This is validates the first part of the URN (urn:sdmx.org.infomodel.&lt;package>.&lt;class=). It is intended to be further restricted.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="urn:sdmx:org\.sdmx\.infomodel\.[a-z]+\.[A-Za-z]+=[^=]+"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- TODO Keep Any? -->
	<xs:simpleType name="UrnClassesPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix to make specific restrictions of package and class values. Note that only one of the patterns must match. It is intended to be further restricted.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnPrefixPart">
			<xs:pattern value=".+\.base\.Agency=.+"/>
			<xs:pattern value=".+\.base\.AgencyScheme=.+"/>
			<xs:pattern value=".+\.base\.Any=.+"/>
			<xs:pattern value=".+\.base\.DataConsumer=.+"/>
			<xs:pattern value=".+\.base\.DataConsumerScheme=.+"/>
			<xs:pattern value=".+\.base\.DataProvider=.+"/>
			<xs:pattern value=".+\.base\.DataProviderScheme=.+"/>
			<xs:pattern value=".+\.base\.MetadataProvider=.+"/>
			<xs:pattern value=".+\.base\.MetadataProviderScheme=.+"/>
			<xs:pattern value=".+\.base\.OrganisationUnit=.+"/>
			<xs:pattern value=".+\.base\.OrganisationUnitScheme=.+"/>
			<xs:pattern value=".+\.categoryscheme\.Categorisation=.+"/>
			<xs:pattern value=".+\.categoryscheme\.Category=.+"/>
			<xs:pattern value=".+\.categoryscheme\.CategoryScheme=.+"/>
			<xs:pattern value=".+\.categoryscheme\.ReportingCategory=.+"/>
			<xs:pattern value=".+\.categoryscheme\.ReportingTaxonomy=.+"/>
			<xs:pattern value=".+\.codelist\.Code=.+"/>
			<xs:pattern value=".+\.codelist\.Codelist=.+"/>
			<xs:pattern value=".+\.codelist\.HierarchicalCode=.+"/>
			<xs:pattern value=".+\.codelist\.Hierarchy=.+"/>
			<xs:pattern value=".+\.codelist\.HierarchyAssociation=.+"/>
			<xs:pattern value=".+\.codelist\.Level=.+"/>
			<xs:pattern value=".+\.codelist\.ValueList=.+"/>
			<xs:pattern value=".+\.conceptscheme\.Concept=.+"/>
			<xs:pattern value=".+\.conceptscheme\.ConceptScheme=.+"/>
			<xs:pattern value=".+\.datastructure\.AttributeDescriptor=.+"/>
			<xs:pattern value=".+\.datastructure\.DataAttribute=.+"/>
			<xs:pattern value=".+\.datastructure\.Dataflow=.+"/>
			<xs:pattern value=".+\.datastructure\.DataStructure=.+"/>
			<xs:pattern value=".+\.datastructure\.Dimension=.+"/>
			<xs:pattern value=".+\.datastructure\.DimensionDescriptor=.+"/>
			<xs:pattern value=".+\.datastructure\.GroupDimensionDescriptor=.+"/>
			<xs:pattern value=".+\.datastructure\.Measure=.+"/>
			<xs:pattern value=".+\.datastructure\.MeasureDescriptor=.+"/>
			<xs:pattern value=".+\.datastructure\.TimeDimension=.+"/>
			<xs:pattern value=".+\.metadatastructure\.MetadataAttribute=.+"/>
			<xs:pattern value=".+\.metadatastructure\.MetadataStructure=.+"/>
			<xs:pattern value=".+\.metadatastructure\.Metadataflow=.+"/>
			<xs:pattern value=".+\.process\.Process=.+"/>
			<xs:pattern value=".+\.process\.ProcessStep=.+"/>
			<xs:pattern value=".+\.process\.Transition=.+"/>
			<xs:pattern value=".+\.registry\.DataConstraint=.+"/>
			<xs:pattern value=".+\.registry\.MetadataConstraint=.+"/>
			<xs:pattern value=".+\.registry\.MetadataProvisionAgreement=.+"/>
			<xs:pattern value=".+\.registry\.ProvisionAgreement=.+"/>
			<xs:pattern value=".+\.structuremapping\.CategorySchemeMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.ConceptSchemeMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.DatePatternMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.EpochMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.FrequencyFormatMapping=.+"/>
			<xs:pattern value=".+\.structuremapping\.OrganisationSchemeMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.ReportingTaxonomyMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.RepresentationMap=.+"/>
			<xs:pattern value=".+\.structuremapping\.StructureMap=.+"/>
			<xs:pattern value=".+\.transformation\.CustomType=.+"/>
			<xs:pattern value=".+\.transformation\.CustomTypeScheme=.+"/>
			<xs:pattern value=".+\.transformation\.NamePersonalisation=.+"/>
			<xs:pattern value=".+\.transformation\.NamePersonalisationScheme=.+"/>
			<xs:pattern value=".+\.transformation\.Ruleset=.+"/>
			<xs:pattern value=".+\.transformation\.RulesetScheme=.+"/>
			<xs:pattern value=".+\.transformation\.Transformation=.+"/>
			<xs:pattern value=".+\.transformation\.TransformationScheme=.+"/>
			<xs:pattern value=".+\.transformation\.UserDefinedOperator=.+"/>
			<xs:pattern value=".+\.transformation\.UserDefinedOperatorScheme=.+"/>
			<xs:pattern value=".+\.transformation\.VtlCodelistMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlConceptMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlDataflowMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlMappingScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="UrnAgencyPart">
		<xs:annotation>
			<xs:documentation>This restricts the prefix and classes patterns to validate the agency part of the URN (=&lt;agency_id>:).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnClassesPart">
			<xs:pattern value=".+=([A-Za-z][A-Za-z0-9_-]*(\.[A-Za-z][A-Za-z0-9_-]*)*):[^:]+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="WildcardUrnAgencyPart">
		<xs:annotation>
			<xs:documentation>This restricts the prefix and classes patterns to validate the agency part of a wildcarded URN reference (=&lt;agency_id>:).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnClassesPart">
			<xs:pattern value=".+=([A-Za-z][A-Za-z0-9_-]*(\.[A-Za-z][A-Za-z0-9_-]*)*):[^:]+"/>
			<xs:pattern value=".+=\*:[^:]+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="UrnMaintainableIdPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix, classes, and agnecy patterns to validate the maintainable ID part of the URN (:&lt;maintainable_id(&lt;version_number>)). Note that it does not restrict the version part as it is intended to be further restricted.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnAgencyPart">
			<xs:pattern value=".+:([A-Za-z0-9_@$-]+)\([0-9A-Za-z\-\.\+]+\)[^(\(\))]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="WildcardUrnMaintainableIdPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix, classes, and agnecy patterns to validate the maintainable ID part of a wildcarded URN reference (:&lt;maintainable_id(&lt;version_number>)). Note that it does not restrict the version part as it is intended to be further restricted.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="WildcardUrnAgencyPart">
			<xs:pattern value=".+:([A-Za-z0-9_@$-]+)\([0-9A-Za-z\-\.\+]+\)[^(\(\))]*"/>
			<xs:pattern value=".+:\*\([0-9A-Za-z\-\.\+\*]+\)[^(\(\))]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UrnVersionPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix, classes, agency, and maintainable id patterns to validate the version number part of the URN ((&lt;version_number)). It accounts for both legacy and semantic versioning, but not wildarding (for referencing). It is meant to be further refined, although all parts after this are optional.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnMaintainableIdPart">
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*))?\).*"/>
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(\-(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*))(\.(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*)))*)?\).*"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="UrnReferenceVersionPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix, classes, agency, and maintainable id patterns to validate the version number part of a URN reference ((&lt;version_number)). It accounts for both legacy and semantic versioning (including late binding). It is meant to be further refined, although all parts after this are optional.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnMaintainableIdPart">
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*))?\).*"/>
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(\-(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*))(\.(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*)))*)?\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*))){2}\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*))(\.((0|[1-9]\d*)\+?))(\.((0|[1-9]\d*)))\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*)))(\.((0|[1-9]\d*)\+?))\).*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="WildcardUrnVersionPart">
		<xs:annotation>
			<xs:documentation>This refines the prefix, classes, agency, and maintainable id patterns to validate the version number part of a wildcarded URN reference ((&lt;version_number)). It accounts for both legacy and semantic versioning (including late binding). It is meant to be further refined, although all parts after this are optional.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="WildcardUrnMaintainableIdPart">
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*))?\).*"/>
			<xs:pattern value=".+\((0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(\-(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*))(\.(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*)))*)?\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*))){2}\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*))(\.((0|[1-9]\d*)\+?))(\.((0|[1-9]\d*)))\).*"/>
			<xs:pattern value=".+\(((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*)))(\.((0|[1-9]\d*)\+?))\).*"/>
			<xs:pattern value=".+\(\*\).*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UrnType">
		<xs:annotation>
			<xs:documentation>The completes the refinement of the prefix, classes, agency, maintainable id, and version number patterns to validate the last, and optional, nested component part of the URN (e.g. (&lt;version_number>)&lt;containerobject-id>.&lt;object-id>*). The nested patterns provide a complete validation of the URN pattern. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnVersionPart">
			<xs:pattern value=".+\)(\.[A-Za-z0-9_@$\-]+(\.[A-Za-z0-9_@$\-]+)*)?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UrnReferenceType">
		<xs:annotation>
			<xs:documentation>The completes the refinement of the prefix, classes, agency, maintainable id, and version number patterns to validate the last, and optional, nested component part of a URN reference (e.g. (&lt;version_number>)&lt;containerobject-id>.&lt;object-id>*). The nested patterns provide a complete validation of the URN pattern. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnReferenceVersionPart">
			<xs:pattern value=".+\)(\.[A-Za-z0-9_@$\-]+(\.[A-Za-z0-9_@$\-]+)*)?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="WildcardUrnType">
		<xs:annotation>
			<xs:documentation>The completes the refinement of the prefix, classes, agency, maintainable id, and version number patterns to validate the last, and optional, nested component part of a wildcarded URN reference (e.g. (&lt;version_number>)&lt;containerobject-id>.&lt;object-id>*). The nested patterns provide a complete validation of the URN pattern. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="WildcardUrnVersionPart">
			<xs:pattern value=".+\)(\.[A-Za-z0-9_@$\-]+(\.[A-Za-z0-9_@$\-]+)*)?"/>
			<xs:pattern value=".+\)(\*(\.\*)*)?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MaintainableUrnType">
		<xs:annotation>
			<xs:documentation>Restricts the URN so that the pattern ends after the version part.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MaintainableUrnReferenceType">
		<xs:annotation>
			<xs:documentation>Restricts the URN reference so that the pattern ends after the version part.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ComponentUrnType">
		<xs:annotation>
			<xs:documentation>Restricts the URN so that the pattern ends after the first component part.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\)\.[A-Za-z0-9_@$\-]+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ComponentUrnReferenceType">
		<xs:annotation>
			<xs:documentation>Restricts the URN reference so that the pattern ends after the first component part.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\)\.[A-Za-z0-9_@$\-]+"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- Specific Object URNs -->

	<xs:simpleType name="AgencyUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.base\.Agency=.+:AGENCIES\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="AgencySchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.base\.AgencyScheme=.+:AGENCIES\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="DataConsumerUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.base\.DataConsumer=.+:DATA_CONSUMERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataConsumerSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.base\.DataConsumerScheme=.+:DATA_CONSUMERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="DataProviderUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.base\.DataProvider=.+:DATA_PROVIDERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataProviderSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.base\.DataProviderScheme=.+:DATA_PROVIDERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="MetadataProviderUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.base\.MetadataProvider=.+:METADATA_PROVIDERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataProviderSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.base\.MetadataProviderScheme=.+:METADATA_PROVIDERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationUnitUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.base\.OrganisationUnit=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationUnitSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.base\.OrganisationUnitScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorisationUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.categoryscheme\.Categorisation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategoryUrnType">
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\.categoryscheme\.Category=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorySchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.categoryscheme\.CategoryScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingCategoryUrnType">
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\.categoryscheme\.ReportingCategory=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingTaxonomyUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.categoryscheme\.ReportingTaxonomy=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CodeUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.codelist\.Code=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CodelistUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.codelist\.Codelist=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchicalCodeUrnType">
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\.codelist\.HierarchicalCode=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchyUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.codelist\.Hierarchy=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchyAssociationUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.codelist\.HierarchyAssociation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="LevelUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.codelist\.Level=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ValueListUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.codelist\.ValueList=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.conceptscheme\.Concept=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.conceptscheme\.ConceptScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AttributeDescriptorUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.AttributeDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataAttributeUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.DataAttribute=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataflowUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.datastructure\.Dataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataStructureUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.datastructure\.DataStructure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DimensionUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.Dimension=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DimensionDescriptorUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.DimensionDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="GroupDimensionDescriptorUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.GroupDimensionDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MeasureUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.Measure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MeasureDescriptorUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.MeasureDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TimeDimensionUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.datastructure\.TimeDimension=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataAttributeUrnType">
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\.metadatastructure\.MetadataAttribute=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataflowUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.metadatastructure\.Metadataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataStructureUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.metadatastructure\.MetadataStructure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProcessUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.process\.Process=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProcessStepUrnType">
		<xs:restriction base="UrnType">
			<xs:pattern value=".+\.process\.ProcessStep=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransitionUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.process\.Transition=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataConstraintUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.registry\.DataConstraint=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataConstraintUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.registry\.MetadataConstraint=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataProvisionAgreementUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.registry\.MetadataProvisionAgreement=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProvisionAgreementUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.registry\.ProvisionAgreement=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorySchemeMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.CategorySchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptSchemeMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.ConceptSchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DatePatternMapUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.structuremapping\.DatePatternMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EpochMapUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.structuremapping\.EpochMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="FrequencyFormatMappingUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.structuremapping\.FrequencyFormatMapping=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationSchemeMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.OrganisationSchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingTaxonomyMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.ReportingTaxonomyMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RepresentationMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.RepresentationMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="StructureMapUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.structuremapping\.StructureMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CustomTypeUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.CustomType=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CustomTypeSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.CustomTypeScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePersonalisationUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.NamePersonalisation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePersonalisationSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.NamePersonalisationScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RulesetUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.Ruleset=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RulesetSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.RulesetScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransformationUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.Transformation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransformationSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.TransformationScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UserDefinedOperatorUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.UserDefinedOperator=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UserDefinedOperatorSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.UserDefinedOperatorScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="VtlMappingUrnType">
		<xs:restriction base="ComponentUrnType">
			<xs:pattern value=".+\.transformation\.VtlCodelistMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlConceptMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlDataflowMapping=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="VtlMappingSchemeUrnType">
		<xs:restriction base="MaintainableUrnType">
			<xs:pattern value=".+\.transformation\.VtlMappingScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- URN References -->
	<xs:simpleType name="StructureOrUsageReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.DataStructure=.+"/>
			<xs:pattern value=".+\.datastructure\.Dataflow=.+"/>
			<xs:pattern value=".+\.metadatastructure\.MetadataStructure=.+"/>
			<xs:pattern value=".+\.metadatastructure\.Metadataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="StructureUsageReferenceType">
		<xs:restriction base="StructureOrUsageReferenceType">
			<xs:pattern value=".+\.datastructure\.Dataflow=.+"/>
			<xs:pattern value=".+\.metadatastructure\.Metadataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="StructureReferenceType">
		<xs:restriction base="StructureOrUsageReferenceType">
			<xs:pattern value=".+\.datastructure\.DataStructure=.+"/>
			<xs:pattern value=".+\.metadatastructure\.MetadataStructure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AnyCodelistReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.codelist\.Codelist=.+"/>
			<xs:pattern value=".+\.codelist\.Hierarchy=.+"/>
			<xs:pattern value=".+\.codelist\.ValueList=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.base\.AgencyScheme=.+:AGENCIES\(.+\)"/>
			<xs:pattern value=".+\.base\.DataConsumerScheme=.+:DATA_CONSUMERS\(.+\)"/>
			<xs:pattern value=".+\.base\.DataProviderScheme=.+:DATA_PROVIDERS\(.+\)"/>
			<xs:pattern value=".+\.base\.MetadataProviderScheme=.+:METADATA_PROVIDERS\(.+\)"/>
			<xs:pattern value=".+\.base\.OrganisationUnitScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.base\.Agency=.+:AGENCIES\(.+\).+"/>
			<xs:pattern value=".+\.base\.DataConsumer=.+:DATA_CONSUMERS\(.+\).+"/>
			<xs:pattern value=".+\.base\.DataProvider=.+:DATA_PROVIDERS\(.+\).+"/>
			<xs:pattern value=".+\.base\.MetadataProvider=.+:METADATA_PROVIDERS\(.+\).+"/>
			<xs:pattern value=".+\.base\.OrganisationUnit=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConstraintReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.registry\.DataConstraint=.+"/>
			<xs:pattern value=".+\.registry\.MetadataConstraint=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AgencyReferenceType">
		<xs:restriction base="OrganisationReferenceType">
			<xs:pattern value=".+\.base\.Agency=.+:AGENCIES\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="AgencySchemeReferenceType">
		<xs:restriction base="OrganisationSchemeReferenceType">
			<xs:pattern value=".+\.base\.AgencyScheme=.+:AGENCIES\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="DataConsumerReferenceType">
		<xs:restriction base="OrganisationReferenceType">
			<xs:pattern value=".+\.base\.DataConsumer=.+:DATA_CONSUMERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataConsumerSchemeReferenceType">
		<xs:restriction base="OrganisationSchemeReferenceType">
			<xs:pattern value=".+\.base\.DataConsumerScheme=.+:DATA_CONSUMERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="DataProviderReferenceType">
		<xs:restriction base="OrganisationReferenceType">
			<xs:pattern value=".+\.base\.DataProvider=.+:DATA_PROVIDERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataProviderSchemeReferenceType">
		<xs:restriction base="OrganisationSchemeReferenceType">
			<xs:pattern value=".+\.base\.DataProviderScheme=.+:DATA_PROVIDERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="MetadataProviderReferenceType">
		<xs:restriction base="OrganisationReferenceType">
			<xs:pattern value=".+\.base\.MetadataProvider=.+:METADATA_PROVIDERS\(.+\).+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataProviderSchemeReferenceType">
		<xs:restriction base="OrganisationSchemeReferenceType">
			<xs:pattern value=".+\.base\.MetadataProviderScheme=.+:METADATA_PROVIDERS\(.+\)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationUnitReferenceType">
		<xs:restriction base="OrganisationReferenceType">
			<xs:pattern value=".+\.base\.OrganisationUnit=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationUnitSchemeReferenceType">
		<xs:restriction base="OrganisationSchemeReferenceType">
			<xs:pattern value=".+\.base\.OrganisationUnitScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorisationReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.categoryscheme\.Categorisation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategoryReferenceType">
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\.categoryscheme\.Category=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorySchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.categoryscheme\.CategoryScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingCategoryReferenceType">
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\.categoryscheme\.ReportingCategory=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingTaxonomyReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.categoryscheme\.ReportingTaxonomy=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CodeReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.codelist\.Code=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CodelistReferenceType">
		<xs:restriction base="AnyCodelistReferenceType">
			<xs:pattern value=".+\.codelist\.Codelist=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchicalCodeReferenceType">
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\.codelist\.HierarchicalCode=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchyReferenceType">
		<xs:restriction base="AnyCodelistReferenceType">
			<xs:pattern value=".+\.codelist\.Hierarchy=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="HierarchyAssociationReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.codelist\.HierarchyAssociation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="LevelReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.codelist\.Level=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ValueListReferenceType">
		<xs:restriction base="AnyCodelistReferenceType">
			<xs:pattern value=".+\.codelist\.ValueList=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.conceptscheme\.Concept=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.conceptscheme\.ConceptScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AttributeDescriptorReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.AttributeDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataAttributeReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.DataAttribute=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataflowReferenceType">
		<xs:restriction base="StructureUsageReferenceType">
			<xs:pattern value=".+\.datastructure\.Dataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataStructureReferenceType">
		<xs:restriction base="StructureReferenceType">
			<xs:pattern value=".+\.datastructure\.DataStructure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DimensionReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.Dimension=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DimensionDescriptorReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.DimensionDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="GroupDimensionDescriptorReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.GroupDimensionDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MeasureReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.Measure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MeasureDescriptorReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.MeasureDescriptor=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TimeDimensionReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.datastructure\.TimeDimension=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataAttributeReferenceType">
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\.metadatastructure\.MetadataAttribute=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataflowReferenceType">
		<xs:restriction base="StructureUsageReferenceType">
			<xs:pattern value=".+\.metadatastructure\.Metadataflow=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataStructureReferenceType">
		<xs:restriction base="StructureReferenceType">
			<xs:pattern value=".+\.metadatastructure\.MetadataStructure=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProcessReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.process\.Process=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProcessStepReferenceType">
		<xs:restriction base="UrnReferenceType">
			<xs:pattern value=".+\.process\.ProcessStep=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransitionReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.process\.Transition=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DataConstraintReferenceType">
		<xs:restriction base="ConstraintReferenceType">
			<xs:pattern value=".+\.registry\.DataConstraint=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataConstraintReferenceType">
		<xs:restriction base="ConstraintReferenceType">
			<xs:pattern value=".+\.registry\.MetadataConstraint=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="MetadataProvisionAgreementReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.registry\.MetadataProvisionAgreement=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProvisionAgreementReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.registry\.ProvisionAgreement=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CategorySchemeMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.CategorySchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ConceptSchemeMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.ConceptSchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DatePatternMapReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.DatePatternMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EpochMapReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.EpochMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="FrequencyFormatMappingReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.FrequencyFormatMapping=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="OrganisationSchemeMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.OrganisationSchemeMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ReportingTaxonomyMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.ReportingTaxonomyMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RepresentationMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.RepresentationMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="StructureMapReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.structuremapping\.StructureMap=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CustomTypeReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.CustomType=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CustomTypeSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.CustomTypeScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePersonalisationReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.NamePersonalisation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePersonalisationSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.NamePersonalisationScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RulesetReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.Ruleset=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RulesetSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.RulesetScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransformationReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.Transformation=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TransformationSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.TransformationScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UserDefinedOperatorReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.UserDefinedOperator=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UserDefinedOperatorSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.UserDefinedOperatorScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="VtlMappingReferenceType">
		<xs:restriction base="ComponentUrnReferenceType">
			<xs:pattern value=".+\.transformation\.VtlCodelistMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlConceptMapping=.+"/>
			<xs:pattern value=".+\.transformation\.VtlDataflowMapping=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="VtlMappingSchemeReferenceType">
		<xs:restriction base="MaintainableUrnReferenceType">
			<xs:pattern value=".+\.transformation\.VtlMappingScheme=.+"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- Version Referencing -->
	<xs:simpleType name="VersionReferenceType">
		<xs:annotation>
			<xs:documentation>VersionReferenceType defines the structure of version number in a reference. When semantic versioning is used, the major, minor, or patch version parts can be wildcarded using "+" as an extension. For example, 2+.3.1 means the currently latest available version >= 2.3.1 (even if not backwards compatible). Note that wildcarded semantic version references cannot be combined with version extended reference (e.g. 2.3+.1-draft is not permissable). Version-extended (e.g. 1.3.1-draft) and legacy version numbers (e.g. 1 or 1.0) are also supported.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="LegacyVersionNumberType SemanticVersionNumberType SemanticVersionReferenceType"/>
	</xs:simpleType>

	<xs:simpleType name="SemanticVersionReferenceType">
		<xs:annotation>
			<xs:documentation>SemanticVersionReferenceType is a simple type for referencing semantic version numbers. It allows for the wildcarding of only one the major, minor, or patch version parts using "+".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*))){2}"/>
			<xs:pattern value="((0|[1-9]\d*))(\.((0|[1-9]\d*)\+?))(\.((0|[1-9]\d*)))"/>
			<xs:pattern value="((0|[1-9]\d*)\+?)(\.((0|[1-9]\d*)))(\.((0|[1-9]\d*)\+?))"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="WildcardVersionType">
		<xs:annotation>
			<xs:documentation>WildcardVersionType combines the VersionType and WildcardType to allow a reference to either a specific version of an object, or to wildcard the version in the reference by specifying the '*' value.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="VersionReferenceType WildcardType"/>
	</xs:simpleType>

	<xs:simpleType name="WildcardType">
		<xs:annotation>
			<xs:documentation>WildcardType is a single value code list, used to include the '*' character - indicating that the identification component is wildcarded.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="*">
				<xs:annotation>
					<xs:documentation>Indicates that any value of the identifier component is allowed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<!-- Data/Metadata Set References -->
	
	<xs:complexType name="SetReferenceType">
		<xs:annotation>
			<xs:documentation>SetReferenceType defines the structure of a reference to a data/metadata set. A full reference to a data provider and the identifier for the data set must be provided. Note that this is not derived from the base reference structure since data/metadata sets are not technically identifiable.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataProvider" type="DataProviderReferenceType">
				<xs:annotation>
					<xs:documentation>DataProvider references a the provider of the data/metadata set. A URN and/or a complete set of reference fields must be provided.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="IDType">
				<xs:annotation>
					<xs:documentation>ID contains the identifier of the data/metadata set being referenced.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- ID Types -->

	<xs:simpleType name="NestedIDType">
		<xs:annotation>
			<xs:documentation>NestedIDType is the least restrictive form of an identifier used throughout all SDMX-ML messages. It allows for a hierarchical identifier, with each portion separated by the '.' character. For the identifier portions, valid characters include A-Z, a-z, @, 0-9, _, -, $.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Za-z0-9_@$\-]+(\.[A-Za-z0-9_@$\-]+)*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TwoLevelIDType">
		<xs:annotation>
			<xs:documentation>TwoLevelIDType defines an identifier with exactly two levels.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="NestedIDType">
			<xs:pattern value="[A-Za-z0-9_@$\-]+\.[A-Za-z0-9_@$\-]+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="IDType">
		<xs:annotation>
			<xs:documentation>IDType provides a type which is used for restricting the characters in codes and IDs throughout all SDMX-ML messages. Valid characters include A-Z, a-z, @, 0-9, _, -, $.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="NestedIDType">
			<xs:pattern value="[A-Za-z0-9_@$\-]+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NCNameIDType">
		<xs:annotation>
			<xs:documentation>NCNameIDType restricts the IDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="IDType">
			<xs:pattern value="[A-Za-z][A-Za-z0-9_\-]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NestedNCNameIDType">
		<xs:annotation>
			<xs:documentation>NestedNCNameIDType restricts the NestedIDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="NestedIDType">
			<xs:pattern value="[A-Za-z][A-Za-z0-9_\-]*(\.[A-Za-z][A-Za-z0-9_\-]*)*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SingleNCNameIDType">
		<xs:annotation>
			<xs:documentation>SingleNCNameIDType restricts the NestedNCNameIDType to allow only one level. Note that this is the same pattern as the NCNameIDType, but can be used when the base type to be restricted is a nested NCNameIDType (where as the NCNameIDType could only restrict the IDType).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="NestedNCNameIDType">
			<xs:pattern value="[A-Za-z][A-Za-z0-9_\-]*"/>
		</xs:restriction>
	</xs:simpleType>	
	
	<xs:simpleType name="VersionType">
		<xs:annotation>
			<xs:documentation>VersionType is used to communicate version information. Semantic versioning, based on 3 or 4 version parts (major.minor.patch[-extension]) is supported. The legency SDMX version format is also support.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="LegacyVersionNumberType SemanticVersionNumberType"/>
	</xs:simpleType>

	<xs:simpleType name="SemanticVersionNumberType">
		<xs:annotation>
			<xs:documentation>SemanticVersionNumberType is a simple type for validating semantic version in the format (major.minor.patch[-extension]).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(\-(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*))(\.(([A-Za-z\-]|([A-Za-z\-][A-Za-z0-9\-]+)|([A-Za-z0-9\-]+[A-Za-z\-][A-Za-z0-9\-]*))|(0|[1-9][0-9]*)))*)?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="LegacyVersionNumberType">
		<xs:annotation>
			<xs:documentation>LegacyVersionNumberType describes the version number format previously supported in SDMX. The format is restricted to allow for simple incrementing and sorting of version number. The version consists of a set of maximum 2 numeric components, separated by the '.' character. When processing version, each numeric component (the number preceding and following any '.' character) should be parsed as an integer. Thus, a version of 1.3 and 1.03 would be equivalent, as both the '3' component and the '03' component would parse to an integer value of 3.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(0|[1-9]\d*)(\.(0|[1-9]\d*))?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="EmptyType">
		<xs:annotation>
			<xs:documentation>EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<!-- Specific Reference Types -->

	<xs:element name="Any" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Any is an empty element that denotes an object of any type.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Agency" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Agency is an empty element that denotes an agency object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="AgencyScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>AgencyScheme is an empty element that denotes an agency scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Attribute" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Attribute is an empty element that denotes an attribute object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="AttributeDescriptor" type="EmptyType">
		<xs:annotation>
			<xs:documentation>AttributeDescriptor is an empty element that denotes an attribute descriptor object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Categorisation" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Categorisation is an empty element that denotes a categorisation object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Category" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Category is an empty element that denotes a category object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="CategorySchemeMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>CategorySchemeMap is an empty element that denotes a category scheme map object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="CategoryScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>CategoryScheme is an empty element that denotes a category scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Code" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Code is an empty element that denotes a code object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Codelist" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Codelist is an empty element that denotes a code list object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ComponentMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ComponentMap is an empty element that denotes a component map object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Concept" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Concept is an empty element that denotes a concept object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ConceptMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ConceptMap is an empty element that denotes a concept map object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="ConceptScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ConceptScheme is an empty element that denotes a concept scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ConceptSchemeMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ConceptSchemeMap is an empty element that denotes a concept scheme map object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="CustomType" type="EmptyType">
		<xs:annotation>
			<xs:documentation>CustomType is an empty element that denotes a custom type object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="CustomTypeScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>CustomTypeScheme is an empty element that denotes a custom type scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Dataflow" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Dataflow is an empty element that denotes a data flow object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataConstraint" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataConstraint is an empty element that denotes a data constraint object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataConsumer" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataConsumer is an empty element that denotes a data consumer object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataConsumerScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataConsumerScheme is an empty element that denotes a data consumer scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataProvider" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataProvider is an empty element that denotes a data provider object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataProviderScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataProviderScheme is an empty element that denotes a data provider scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataSetTarget" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataSetTarget is an empty element that denotes a data set target object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DataStructure" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DataStructure is an empty element that denotes a data structure definition object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Dimension" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Dimension is an empty element that denotes a dimension object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DimensionDescriptor" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DimensionDescriptor is an empty element that denotes a dimension descriptor object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="DimensionDescriptorValuesTarget" type="EmptyType">
		<xs:annotation>
			<xs:documentation>DimensionDescriptorValuesTarget is an empty element that denotes a dimension descriptor values target object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="GroupDimensionDescriptor" type="EmptyType">
		<xs:annotation>
			<xs:documentation>GroupDimensionDescriptor is an empty element that denotes a group dimension descriptor object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="HierarchicalCode" type="EmptyType">
		<xs:annotation>
			<xs:documentation>HierarchicalCode is an empty element that denotes a hierarchical code object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Hierarchy" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Hierarchy is an empty element that denotes a hierarchy.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="HierarchyAssociation" type="EmptyType">
		<xs:annotation>
			<xs:documentation>HierarchyAssociation is an empty element that denotes a hierarchy assoication object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="IdentifiableObjectTarget" type="EmptyType">
		<xs:annotation>
			<xs:documentation>IdentifiableObjectTarget is an empty element that denotes an identifiable object target object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Level" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Level is an empty element that denotes a level object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="MeasureDescriptor" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MeasureDescriptor is an empty element that denotes a measure descriptor object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Metadataflow" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Metadataflow is an empty element that denotes a metadata flow object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataAttribute" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataAttribute is an empty element that denotes a metadata attribute object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataConstraint" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataConstraint is an empty element that denotes a metadata constraint object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataProvider" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataProvider is an empty element that denotes a metadata provider object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataProviderScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataProviderScheme is an empty element that denotes a metadata provider scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataProvisionAgreement" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataProvisionAgreement is an empty element that denotes a metadata provision agreement object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataSet" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataSet is an empty element that denotes a metadata set object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataStructure" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataStructure is an empty element that denotes a metadata structure definition object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="MetadataTarget" type="EmptyType">
		<xs:annotation>
			<xs:documentation>MetadataTarget is an empty element that denotes a metadata target object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="NamePersonalisation" type="EmptyType">
		<xs:annotation>
			<xs:documentation>NamePersonalisation is an empty element that denotes a name personalisation object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="NamePersonalisationScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>NamePersonalisationScheme is an empty element that denotes a name personalisation scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="OrganisationMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>OrganisationMap is an empty element that denotes an organisation map object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="OrganisationSchemeMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>OrganisationSchemeMap is an empty element that denotes an organisation scheme map object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="OrganisationUnit" type="EmptyType">
		<xs:annotation>
			<xs:documentation>OrganisationUnit is an empty element that denotes an organisation unit object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="OrganisationUnitScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>OrganisationUnitScheme is an empty element that denotes an organisation unit scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Measure" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Measure is an empty element that denotes a measure object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Process" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Process is an empty element that denotes a process object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ProcessStep" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ProcessStep is an empty element that denotes a process step object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ProvisionAgreement" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ProvisionAgreement is an empty element that denotes a provision agreement object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ReportingCategory" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportingCategory is an empty element that denotes a reporting category object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ReportingCategoryMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportingCategoryMap is an empty element that denotes a reporting category map object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="ReportingTaxonomy" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportingTaxonomy is an empty element that denotes a reporting taxonomy object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ReportingTaxonomyMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportingTaxonomyMap is an empty element that denotes a reporting taxonomy map object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="ReportPeriodTarget" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportPeriodTarget is an empty element that denotes a report period target object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="ReportStructure" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ReportStructure is an empty element that denotes a report structure object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Ruleset" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Ruleset is an empty element that denotes a ruleset object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="RulesetScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>RulesetScheme is an empty element that denotes a ruleset scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="StructureMap" type="EmptyType">
		<xs:annotation>
			<xs:documentation>StructureMap is an empty element that denotes a structure map object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="StructureSet" type="EmptyType">
		<xs:annotation>
			<xs:documentation>StructureSet is an empty element that denotes a structure set object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="TimeDimension" type="EmptyType">
		<xs:annotation>
			<xs:documentation>TimeDimension is an empty element that denotes a time dimension object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Transformation" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Transformation is an empty element that denotes a transformation object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="TransformationScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>TransformationScheme is an empty element that denotes a transformation scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="Transition" type="EmptyType">
		<xs:annotation>
			<xs:documentation>Transition is an empty element that denotes a transition object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="UserDefinedOperator" type="EmptyType">
		<xs:annotation>
			<xs:documentation>UserDefinedOperator is an empty element that denotes an user defined operator object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="UserDefinedOperatorScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>UserDefinedOperatorScheme is an empty element that denotes an user defined operator scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="ValueList" type="EmptyType">
		<xs:annotation>
			<xs:documentation>ValueList is an empty element that denotes a value list object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="VtlMapping" type="EmptyType">
		<xs:annotation>
			<xs:documentation>VtlMapping is an empty element that denotes a VTL Mapping object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="VtlMappingScheme" type="EmptyType">
		<xs:annotation>
			<xs:documentation>VtlMappingScheme is an empty element that denotes a VTL mapping scheme object.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="ObjectTypeListType">
		<xs:annotation>
			<xs:documentation>ObjectTypeListType provides a means for enumerating object types.</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element ref="Any" minOccurs="0"/>
			<xs:element ref="Agency" minOccurs="0"/>
			<xs:element ref="AgencyScheme" minOccurs="0"/>
			<xs:element ref="Attribute" minOccurs="0"/>
			<xs:element ref="AttributeDescriptor" minOccurs="0"/>
			<xs:element ref="Categorisation" minOccurs="0"/>
			<xs:element ref="Category" minOccurs="0"/>
			<xs:element ref="CategorySchemeMap" minOccurs="0"/>
			<xs:element ref="CategoryScheme" minOccurs="0"/>
			<xs:element ref="Code" minOccurs="0"/>
			<xs:element ref="Codelist" minOccurs="0"/>
			<xs:element ref="ComponentMap" minOccurs="0"/>
			<xs:element ref="Concept" minOccurs="0"/>
			<xs:element ref="ConceptMap" minOccurs="0"/>
			<xs:element ref="ConceptScheme" minOccurs="0"/>
			<xs:element ref="ConceptSchemeMap" minOccurs="0"/>
			<xs:element ref="CustomType" minOccurs="0"/>
			<xs:element ref="CustomTypeScheme" minOccurs="0"/>
			<xs:element ref="Dataflow" minOccurs="0"/>
			<xs:element ref="DataConstraint" minOccurs="0"/>
			<xs:element ref="DataConsumer" minOccurs="0"/>
			<xs:element ref="DataConsumerScheme" minOccurs="0"/>
			<xs:element ref="DataProvider" minOccurs="0"/>
			<xs:element ref="DataProviderScheme" minOccurs="0"/>
			<xs:element ref="DataSetTarget" minOccurs="0"/>
			<xs:element ref="DataStructure" minOccurs="0"/>
			<xs:element ref="Dimension" minOccurs="0"/>
			<xs:element ref="DimensionDescriptor" minOccurs="0"/>
			<xs:element ref="DimensionDescriptorValuesTarget" minOccurs="0"/>
			<xs:element ref="GroupDimensionDescriptor" minOccurs="0"/>
			<xs:element ref="HierarchicalCode" minOccurs="0"/>
			<xs:element ref="Hierarchy" minOccurs="0"/>
			<xs:element ref="HierarchyAssociation" minOccurs="0"/>
			<xs:element ref="IdentifiableObjectTarget" minOccurs="0"/>
			<xs:element ref="Level" minOccurs="0"/>
			<xs:element ref="MeasureDescriptor" minOccurs="0"/>
			<xs:element ref="Metadataflow" minOccurs="0"/>
			<xs:element ref="MetadataAttribute" minOccurs="0"/>
			<xs:element ref="MetadataConstraint" minOccurs="0"/>
			<xs:element ref="MetadataProvider" minOccurs="0"/>
			<xs:element ref="MetadataProviderScheme" minOccurs="0"/>
			<xs:element ref="MetadataProvisionAgreement" minOccurs="0"/>
			<xs:element ref="MetadataSet" minOccurs="0"/>
			<xs:element ref="MetadataStructure" minOccurs="0"/>
			<xs:element ref="MetadataTarget" minOccurs="0"/>
			<xs:element ref="NamePersonalisation" minOccurs="0"/>
			<xs:element ref="NamePersonalisationScheme" minOccurs="0"/>
			<xs:element ref="OrganisationMap" minOccurs="0"/>
			<xs:element ref="OrganisationSchemeMap" minOccurs="0"/>
			<xs:element ref="OrganisationUnit" minOccurs="0"/>
			<xs:element ref="OrganisationUnitScheme" minOccurs="0"/>
			<xs:element ref="Measure" minOccurs="0"/>
			<xs:element ref="Process" minOccurs="0"/>
			<xs:element ref="ProcessStep" minOccurs="0"/>
			<xs:element ref="ProvisionAgreement" minOccurs="0"/>
			<xs:element ref="ReportingCategory" minOccurs="0"/>
			<xs:element ref="ReportingCategoryMap" minOccurs="0"/>
			<xs:element ref="ReportingTaxonomy" minOccurs="0"/>
			<xs:element ref="ReportingTaxonomyMap" minOccurs="0"/>
			<xs:element ref="ReportPeriodTarget" minOccurs="0"/>
			<xs:element ref="ReportStructure" minOccurs="0"/>
			<xs:element ref="Ruleset" minOccurs="0"/>
			<xs:element ref="RulesetScheme" minOccurs="0"/>
			<xs:element ref="StructureMap" minOccurs="0"/>
			<xs:element ref="StructureSet" minOccurs="0"/>
			<xs:element ref="TimeDimension" minOccurs="0"/>
			<xs:element ref="Transformation" minOccurs="0"/>
			<xs:element ref="TransformationScheme" minOccurs="0"/>
			<xs:element ref="Transition" minOccurs="0"/>
			<xs:element ref="UserDefinedOperator" minOccurs="0"/>
			<xs:element ref="UserDefinedOperatorScheme" minOccurs="0"/>
			<xs:element ref="ValueList" minOccurs="0"/>
			<xs:element ref="VtlMapping" minOccurs="0"/>
			<xs:element ref="VtlMappingScheme" minOccurs="0"/>
		</xs:all>
	</xs:complexType>

	<xs:complexType name="MaintainableObjectTypeListType">
		<xs:annotation>
			<xs:documentation>MaintainableObjectTypeListType provides a means for enumerating maintainable object types.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:restriction base="ObjectTypeListType">
				<xs:all>
					<xs:element ref="AgencyScheme" minOccurs="0"/>
					<xs:element ref="Categorisation" minOccurs="0"/>
					<xs:element ref="CategoryScheme" minOccurs="0"/>
					<xs:element ref="Codelist" minOccurs="0"/>
					<xs:element ref="ConceptScheme" minOccurs="0"/>
					<xs:element ref="Dataflow" minOccurs="0"/>
					<xs:element ref="DataConstraint" minOccurs="0"/>
					<xs:element ref="DataConsumerScheme" minOccurs="0"/>
					<xs:element ref="DataProviderScheme" minOccurs="0"/>
					<xs:element ref="DataStructure" minOccurs="0"/>
					<xs:element ref="Hierarchy" minOccurs="0"/>
					<xs:element ref="HierarchyAssociation" minOccurs="0"/>
					<xs:element ref="Metadataflow" minOccurs="0"/>
					<xs:element ref="MetadataConstraint" minOccurs="0"/>
					<xs:element ref="MetadataProviderScheme" minOccurs="0"/>
					<xs:element ref="MetadataProvisionAgreement" minOccurs="0"/>
					<xs:element ref="MetadataStructure" minOccurs="0"/>
					<xs:element ref="NamePersonalisationScheme" minOccurs="0"/>
					<xs:element ref="OrganisationUnitScheme" minOccurs="0"/>
					<xs:element ref="Process" minOccurs="0"/>
					<xs:element ref="ProvisionAgreement" minOccurs="0"/>
					<xs:element ref="ReportingTaxonomy" minOccurs="0"/>
					<xs:element ref="RulesetScheme" minOccurs="0"/>
					<xs:element ref="StructureSet" minOccurs="0"/>
					<xs:element ref="TransformationScheme" minOccurs="0"/>
					<xs:element ref="UserDefinedOperatorScheme" minOccurs="0"/>
					<xs:element ref="ValueList" minOccurs="0"/>
					<xs:element ref="VtlMappingScheme" minOccurs="0"/>
				</xs:all>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	
</xs:schema>